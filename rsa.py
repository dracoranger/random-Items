def egcd(a, b):
    x,y, u,v = 0,1, 1,0
    while a != 0:
        q, r = b//a, b%a
        m, n = x-u*q, y-v*q
        b,a, x,y, u,v = a,r, u,v, m,n
        gcd = b
    return gcd, x, y

p = 40700604361
q = 3452543
e = 7
ct = [6060711605323, 897410677851, 29509034655744, 425927596977747, 266001988046875, 182803912081669, 80798284478113, 678223072849, 678223072849, 69833729609375, 194871710000000, 69833729609375, 194871710000000, 587068342272, 69833729609375, 221068140740608, 250226879128704, 587068342272, 86812553324672, 171382426877952, 897410677851, 182803912081669, 78364164096, 476837158203125]
    # compute n
n = p * q
    # Compute phi(n)
phi = (p - 1) * (q - 1)
    # Compute modular inverse of e
gcd, a, b = egcd(e, phi)
d = a #80297478104194299
print( "n:  " + str(d) );

    # Decrypt ciphertext
for i in ct:
    pt = pow(i, d, n)
    print( "pt: " + str(pt) )
